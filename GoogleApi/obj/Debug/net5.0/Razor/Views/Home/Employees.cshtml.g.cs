#pragma checksum "C:\Users\alex\source\repos\GoogleApi\GoogleApi\Views\Home\Employees.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "53b0e6dda31d03239a7773c52c11db3dc1b1439c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Employees), @"mvc.1.0.view", @"/Views/Home/Employees.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\alex\source\repos\GoogleApi\GoogleApi\Views\_ViewImports.cshtml"
using GoogleApi;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\alex\source\repos\GoogleApi\GoogleApi\Views\_ViewImports.cshtml"
using GoogleApi.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"53b0e6dda31d03239a7773c52c11db3dc1b1439c", @"/Views/Home/Employees.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"38e8fd721301da6d72572250f196da1c1209ac82", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Employees : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\alex\source\repos\GoogleApi\GoogleApi\Views\Home\Employees.cshtml"
  
    ViewData["Title"] = "Employee List";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h3>Employees list</h3>

<div>
    <table id=""EmployeesTable"" class=""table table-bordered"">
        <tr>
            <th>Name</th>
            <th>Date of Hire</th>
            <th>Supervisor</th>
        </tr>
    </table>
</div>

<div>
    <a href=""createEmployee"" id=""addEmployee"" class=""btn btn-primary"">Add</a>
</div>



");
            DefineSection("scripts", async() => {
                WriteLiteral(@" 
    <script>

        $(document).ready(function () {
            var employeesTable = $(""#EmployeesTable"");
            
            $.ajax({
                type: ""Get"",
                url: ""/api/Employees"",
                dataType: ""json"",
                success: function (response) {
                    console.log(response);
                    for (var employee of response) {
                        let template = `<tr>
                                        <td>${employee.empName}</td>
                                        <td>${pretierDateTime(employee.empDateOfHire)}</td>
                                        <td>${showSupervisor(employee.employeeSupervisor)}</td>
                                        <td><button class=""updateEmployee btn btn-info"" value=""${employee.empId}"">Update</button>
                                        <button class=""deleteEmployee btn btn-danger"" value=""${employee.empId}"">Delete</button></td>
                                        </tr>`;
 ");
                WriteLiteral(@"                       employeesTable.append(template);
                    }
                }

            });

            function showSupervisor(supervisorObj) {
                if (supervisorObj)
                    return supervisorObj.empName;
                else
                    return ""<h4>Boss!</h4>""            
            }

            function pretierDateTime(empDatetime) {
                return (new Date(empDatetime)).toLocaleDateString();
            }

            $(document).on(""click"", '.deleteEmployee', function () {
                let name = $(this).parent().parent().find(""td:first"").text();
                var confirmation = confirm(`Are you sure you want to delete ${name}`);
                if (confirmation) {
                    var idToDelete = $(this).val();
                    var td = $(this).parent();
                    $.ajax({
                        type: ""DELETE"",
                        url: `/api/Employees/deleteEmployee/${idToDelete}`
     ");
                WriteLiteral(@"               })
                        .done(function () {
                            console.log(""Delete done"");
                            let row = td.parent();
                            row.remove();
                        })
                        .fail(function () {
                            console.log(""Delete failed"");
                        });
                }
            });

            $(document).on(""click"", '.updateEmployee', function () {
                let employeeId = $(this).val();
                let url = `employeeDetails`;                                    
                sessionStorage.setItem('employeeId', employeeId);
                window.location.assign(url);
            });
        });

    </script>
");
            }
            );
            WriteLiteral(" ");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
