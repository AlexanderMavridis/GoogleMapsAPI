#pragma checksum "C:\Users\alex\source\repos\GoogleApi\GoogleApi\Views\Home\CreateEmployee.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "03433011e0f1db976c9294155651caa7c58ed7da"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_CreateEmployee), @"mvc.1.0.view", @"/Views/Home/CreateEmployee.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\alex\source\repos\GoogleApi\GoogleApi\Views\_ViewImports.cshtml"
using GoogleApi;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\alex\source\repos\GoogleApi\GoogleApi\Views\_ViewImports.cshtml"
using GoogleApi.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"03433011e0f1db976c9294155651caa7c58ed7da", @"/Views/Home/CreateEmployee.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"38e8fd721301da6d72572250f196da1c1209ac82", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_CreateEmployee : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("empForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\alex\source\repos\GoogleApi\GoogleApi\Views\Home\CreateEmployee.cshtml"
  
    ViewData["Title"] = "Create Employee";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "03433011e0f1db976c9294155651caa7c58ed7da4567", async() => {
                WriteLiteral("\r\n    <div class=\"form-group\">\r\n        <label");
                BeginWriteAttribute("class", " class=\"", 147, "\"", 155, 0);
                EndWriteAttribute();
                WriteLiteral(" for=\"empName\">Employee name:</label>\r\n        <input type=\"text\" id=\"empName\" name=\"empName\"");
                BeginWriteAttribute("value", " value=\"", 249, "\"", 257, 0);
                EndWriteAttribute();
                WriteLiteral(" required>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label for=\"empDateOfHire\">Employee HireDate:</label>\r\n        <input type=\"datetime-local\" id=\"empDateOfHire\" name=\"empDateOfHire\"");
                BeginWriteAttribute("value", " value=\"", 453, "\"", 461, 0);
                EndWriteAttribute();
                WriteLiteral(" required>\r\n    </div>\r\n\r\n    <div class=\"dropdown\">\r\n        <label for=\"employeeSupervisor\">Supervisor</label>\r\n        <select id=\"employeeSupervisor\" name=\"employeeSupervisor\">\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "03433011e0f1db976c9294155651caa7c58ed7da5861", async() => {
                    WriteLiteral("No Supervisor");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        </select>\r\n    </div>\r\n\r\n    <div>\r\n        <label for=\"ResidenceLat\">Residence Latitude:</label>\r\n        <input type=\"text\" id=\"ResidenceLat\" name=\"ResidenceLat\"");
                BeginWriteAttribute("value", " value=\"", 868, "\"", 876, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n    </div>\r\n\r\n    <div>\r\n        <label for=\"ResidenceLng\">Residence Longitude:</label>\r\n        <input type=\"text\" id=\"ResidenceLng\" name=\"ResidenceLng\"");
                BeginWriteAttribute("value", " value=\"", 1035, "\"", 1043, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <input type=\"checkbox\" id=\"CarOwner\" name=\"CarOwner\"");
                BeginWriteAttribute("value", " value=\"", 1153, "\"", 1161, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n        <label for=\"CarOwner\">Car Owner</label>\r\n    </div>\r\n\r\n\r\n    <div id=\"attributes\"></div>\r\n\r\n    <button class=\"btn btn-success\">Save</button>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"

    <script>

        $(document).ready(function () {
            var dropdown = $(""#employeeSupervisor"");
            var employeeName = $(""#empName"");
            var empHireDate = $(""#empDateOfHire"");
            var attributesSection = $(""#attributes"");
            var supervisor = $(""#employeeSupervisor"");
            var CarOwner = $(""#CarOwner"");
            var ResidenceLat = $(""#ResidenceLat"");
            var ResidenceLng = $(""#ResidenceLng"");
            var objArray = [];

            $.ajax({
                type: ""Get"",
                url: ""/api/Employees"",
                dataType: ""json""
            })
                .done(function (response) {
                    for (var employee of response) {
                        let template = `<option value=""${employee.empId}"">${employee.empName}</option>`;
                        dropdown.append(template);
                    }
                })

                .then(function () {
                    $.ajax({
      ");
                WriteLiteral(@"                  type: ""Get"",
                        url: ""/api/Attributes"",
                        dataType: ""json"",
                        async: false,
                        success: function (response) {
                            for (var attribute of response) {

                                let myobj = { attrName: attribute.attrName, attrId: attribute.attrId }
                                objArray.push(myobj);
                                let template = `<input type=""checkbox"" id=""${attribute.attrId}"" name=""empattr"" value=""${attribute.attrId}"">
                                                            <label for=""empattr"">Name : ${attribute.attrName} | Value : ${attribute.attrValue} </label><br>`;
                                attributesSection.append(template);
                            }
                        }
                    });
                })

                .fail(function () {

                });


            let employeeToPost = {};
     ");
                WriteLiteral(@"       $(""#empForm"").submit(function (e) {
                e.preventDefault();

                employeeToPost.empName = employeeName.val();
                employeeToPost.empDateOfHire = empHireDate.val();
                employeeToPost.empSupervisorId = supervisor.val();
                employeeToPost.ResidenceLat = ResidenceLat.val();
                employeeToPost.ResidenceLng = ResidenceLng.val();

                if (CarOwner.is(':checked'))
                    employeeToPost.CarOwner = 1;
                else
                    employeeToPost.CarOwner = 0;

                /*     employeeToPost.EmployeeSupervisor = supervisor.children(""option:selected"").text();   */

                var arrayToCopy = [];
                $('input[type=""checkbox""]:checked:not(""#CarOwner"")').each(function () {
                    if ($(this).is(':checked')) {
                        let tempObj = { empattrAttributeId: $(this).val() };             // almost duplicated code make it difficult with employe");
                WriteLiteral(@"eId from update
                        arrayToCopy.push(tempObj);
                        console.log(`checkbox value is ${tempObj.empattrAttributeId}`);
                    }
                });

                var namesArray = [];
                for (var obj of objArray) {
                    for (var i = 0; i < arrayToCopy.length; i++) {
                        if (obj.attrId == arrayToCopy[i].empattrAttributeId) {
                            namesArray.push(obj.attrName);
                        }
                    }
                }

                if (namesArray != null) {
                    namesArray.sort();
                }

                let ok = true;
                for (var i = 0; i < namesArray.length; i++) {
                    console.log("""");
                    console.log(namesArray[i]);
                    if (namesArray[i] == namesArray[i + 1]) {
                        alert(""You can not have twice or more of the same attribute!"");
                    ");
                WriteLiteral(@"    ok = false;
                        break;
                    }
                }

                if (ok == true && namesArray != null) {
                    $.ajax({
                        type: ""POST"",
                        url: ""/api/Employees/newEmployee"",
                        headers: { 'Content-Type': 'application/json' },
                        data: JSON.stringify(employeeToPost)
                    })
                        .done(function (response) {
                            console.log(""post done"");
                            console.log(response);
                            employeeToPost.empId = response.empId;
                            employeeToPost.employeeAttributes = [];

                            $('input[type=""checkbox""]:checked').each(function () {
                                if ($(this).is(':checked')) {
                                    employeeToPost.employeeAttributes.push({ empattrAttributeId: $(this).val(), empattrEmployeeId: employee");
                WriteLiteral(@"ToPost.empId });                                          
                                }
                            });

                            console.log(employeeToPost.employeeAttributes);
                            $.ajax({                                                        // is it better inside done() or then() ???
                                type: ""POST"",
                                url: ""/api/Employees/postEmployeesAttributes"",
                                headers: { 'Content-Type': 'application/json' },
                                data: JSON.stringify(employeeToPost)
                            })
                                .done(function () {
                                    console.log(""attributes post done"");
                                })
                                .fail(function (e) {
                                    console.log(""attributes post failed"");
                                    console.log(e);
                       ");
                WriteLiteral(@"         });
                        })

                        .then(function () {
                            window.location.assign(""employees"");
                        })
                        .fail(function (e) {
                            console.log(""post failed"");
                            console.log(e);
                        });
                }
            });
        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
